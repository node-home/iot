{"version":3,"sources":["app/app.coffee","app/scripts/controllers.coffee","app/scripts/datastore.coffee","app/scripts/directives.coffee","app/scripts/filters.coffee","app/scripts/services.coffee"],"names":[],"mappings":"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","file":"_public/js/app.js","sourcesContent":["'use strict'\n\n# Declare app level module which depends on filters, and services\nApp = angular.module('app', [\n  'ngCookies'\n  'ngResource'\n  'ngRoute'\n  'app.controllers'\n  'app.directives'\n  'app.filters'\n  'app.services'\n  'partials'\n])\n\nApp.config([\n  '$routeProvider'\n  '$locationProvider'\n\n($routeProvider, $locationProvider, config) ->\n\n  $routeProvider\n\n    .when('/todo', {templateUrl: '/partials/todo.html'})\n    .when('/view1', {templateUrl: '/partials/partial1.html'})\n    .when('/view2', {templateUrl: '/partials/partial2.html'})\n\n    # Catch all\n    .otherwise({redirectTo: '/todo'})\n\n  # Without server side support html5 must be disabled.\n  $locationProvider.html5Mode(false)\n])\n","'use strict'\n\n### Controllers ###\n\nangular.module('app.controllers', [])\n\n.controller('AppCtrl', [\n  '$scope'\n  '$location'\n  '$resource'\n  '$rootScope'\n\n($scope, $location, $resource, $rootScope) ->\n\n  # Uses the url to determine if the selected\n  # menu item should have the class active.\n  $scope.$location = $location\n  $scope.$watch('$location.path()', (path) ->\n    $scope.activeNavId = path || '/'\n  )\n\n  # getClass compares the current url with the id.\n  # If the current url starts with the id it returns 'active'\n  # otherwise it will return '' an empty string. E.g.\n  #\n  #   # current url = '/products/1'\n  #   getClass('/products') # returns 'active'\n  #   getClass('/orders') # returns ''\n  #\n  $scope.getClass = (id) ->\n    if $scope.activeNavId.substring(0, id.length) == id\n      return 'active'\n    else\n      return ''\n])\n\n.controller('MyCtrl1', [\n  '$scope'\n\n($scope) ->\n  $scope.onePlusOne = 2\n])\n\n.controller('MyCtrl2', [\n  '$scope'\n\n($scope) ->\n  $scope\n])\n\n.controller('TodoCtrl', [\n  '$scope'\n\n($scope) ->\n\n  $scope.todos = [\n    text: \"learn angular\"\n    done: true\n  ,\n    text: \"build an angular app\"\n    done: false\n  ]\n\n  $scope.addTodo = ->\n    $scope.todos.push\n      text: $scope.todoText\n      done: false\n\n    $scope.todoText = \"\"\n\n  $scope.remaining = ->\n    count = 0\n    angular.forEach $scope.todos, (todo) ->\n      count += (if todo.done then 0 else 1)\n\n    count\n\n  $scope.archive = ->\n    oldTodos = $scope.todos\n    $scope.todos = []\n    angular.forEach oldTodos, (todo) ->\n      $scope.todos.push todo  unless todo.done\n\n])\n\n","DataStore = exports? and exports or @DataStore = {}\n\n# which kind of database do you want?\n# possible alternatives: \n# - \"simple\" => this will use the browser's localStorage mechanism. Simple, but synchronous/blocking !!\n# - \"relational\" => this will use the browser-internal sqlite implementation, \"Web SQL Database\"\n# - \"document\" => Use MongoDB's little brother: https://github.com/louischatriot/nedb\nDataStore.create = (type) -> switch type\n  when \"simple\" then createSimpleStore()\n  # when \"keyvalue\" then createKeyValueStore()\n  when \"relational\" then createRelationalStore()\n  when \"document\" then createDocumentStore()\n  # when \"triple\" then createTripleStore()\n  else return undefined\n\n# thin wrapper over localStorage\ncreateSimpleStore = ->\n  get: (key) -> JSON.parse localStorage.getItem JSON.stringify key\n  set: (key, value) -> localStorage.setItem JSON.stringify(key), JSON.stringify(value)\n  delete: (key) -> localStorage.removeItem JSON.stringify key\n  count: -> localStorage.length\n  clear: -> localStorage.clear()\n\ncreateRelationalStore = ->\n  db = openDatabase \"nwsqldb\", \"1.0\", \"embedded sql database\", 1024 * 1024 * 256\n  store = {\n    run: (query, fn) -> db.transaction (tx) -> tx.executeSql query, [], (tx, result) -> \n      fn? (result.rows.item(i) for i in [0 ... result.rows.length])\n  }\n  return store\n\ncreateDocumentStore = ->\n  try \n    NeDB = require \"nedb\"\n    datapath = require('nw.gui').App.dataPath + \"/nedb\"\n    store = {\n      collection: (name) -> new NeDB({ filename: \"/#{name}\", autoload: true });\n    }\n    return store\n  catch e\n    if e.code is \"MODULE_NOT_FOUND\" \n      console.error \"NeDB not found. Try `npm install nedb --save` inside of `/app/assets`.\" \n    else \n      console.error e \n","'use strict'\n\n### Directives ###\n\n# register the module with Angular\nangular.module('app.directives', [\n  # require the 'app.service' module\n  'app.services'\n])\n\n.directive('appVersion', [\n  'version'\n\n(version) ->\n\n  (scope, elm, attrs) ->\n    elm.text(version)\n])\n","'use strict'\n\n### Filters ###\n\nangular.module('app.filters', [])\n\n.filter('interpolate', [\n  'version',\n\n(version) ->\n  (text) ->\n    String(text).replace(/\\%VERSION\\%/mg, version)\n])\n","'use strict'\n\n### Sevices ###\n\nangular.module('app.services', [])\n\n.factory 'version', -> \"0.1\"\n"]}